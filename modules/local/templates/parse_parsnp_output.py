#!/usr/bin/env python


"""Parse parsnp output."""


import logging
import platform
import sys
import yaml
from pathlib import Path


logger = logging.getLogger()


def parse_parsnp_output(parsnp_file, report_file):
    """
    Extracts the Newick tree from the parsnp.tree file, cleans it up and
      appends it to the report.txt file.
    param: str work_dir = isolate-specific folder, e.g.: 'WH200812_001259/'
    param: str seed = combination of sp_abbr and reference, e.g.: 'Lpn/F4468/'
    return: the Newick tree data generated by Parsnp
    output: Newick tree data added to report.txt
    """

    tree = ''

    with open(parsnp_file, 'r') as in_file:
        for line in in_file:
            line = line.rstrip('\\n')
            tree += line

    # parsnp sticks in these '1.000' that just get in the way of plotting,
    # so we just remove them and overwrite the file
    tree = tree.replace(')1.000:','):').replace("'","").replace('.fa','')\
           .replace('.ref','')

    with open(parsnp_file, 'w') as tree_file:
        print(tree, file=tree_file)

    # prints the raw tree data to the report file
    with open(report_file, 'a') as report:
        print('\\nPhylogentic analysis of the core genome (Parsnp):', \
              file=report)
        print(tree, file=report)


if __name__ == "__main__":
    logging.basicConfig(filename="$log_file", level="$log_level", format="[%(levelname)s] %(message)s")

    versions = {}
    versions["${task.process}"] = {
        "python": platform.python_version(),
        "yaml": yaml.__version__,
    }
    with open("versions.yml", "w") as f:
        yaml.dump(versions, f, default_flow_style=False)

    sys.exit(parse_parsnp_output("$parsnp", "$report"))
