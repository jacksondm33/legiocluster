/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}${meta.id ? '/' + meta.id : ''}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> get_publish_file(filename) }
    ]

    storeDir = { "${params.refdir}" }

    withName: CHECK_SAMPLESHEET {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TRIMMOMATIC_MODULE {
        ext.args2 = 'ILLUMINACLIP:NexteraPE-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:100'
    }

    withName: FASTQC_MODULE {
        ext.args = '--extract --quiet'
    }

    withName: SPADES_MODULE {
        ext.args = '--careful --cov-cutoff auto'
    }

    withName: FILTER_CONTIGS {
        storeDir = { "${params.refdir}/Genomes/${params.sp_abbr}/${meta.ref}" }
    }

    withName: BWA_MEM {
        ext.args = "-K 100000000"
    }

    withName: SAMTOOLS_DEPTH {
        ext.args = "-aa"
    }

    withName: QUAST_MODULE {
        ext.args = "--fast"
    }

    withName: FREEBAYES_MODULE {
        ext.args = "-p 1"
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}

def get_publish_file(String filename) {
    def publish_files = ['Ampel_dist.png', 'ME_matrix.csv', 'MST_ME.png', 'MST_SNP.png', 'SNP_matrix.csv', 'SPAdes_contigs.fasta', 'contig_cov_dist.png', 'contig_len_dist.png', 'distances_FAvNCBI.tab', 'distances_RvSp.tab', 'freebayes.vcf', 'histo_depths.png', 'histo_depths_1.png', 'histo_depths_2.png', 'kraken_res.txt', 'log.txt', 'logging.txt', 'mutation_dist.png', 'mutation_dist_1.png', 'mutation_dist_2.png', 'mutations_matrix.csv', 'parsnp_tree.svg', 'per_base_quality_1.png', 'per_base_quality_2.png', 'per_sequence_quality_1.png', 'per_sequence_quality_2.png', 'plot_contig_cov.png', 'plot_contig_len.png', 'plot_depths.png', 'plot_depths_1.png', 'plot_depths_2.png', 'report.html', 'report.txt', 'wrong_genus_contigs.fasta', "${meta.id}.fa", "${meta.id}_cu.fa", "${meta.id}_cc.fasta" ]
    for (publish_file in publish_files) {
        if (filename.endsWith(publish_file)) {
            return publish_file
        }
    }
    return null
}
